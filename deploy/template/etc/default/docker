#!/bin/bash -vex

# Create logical volume
# Do not attempt to create if volume already exists (upstart respawn).
if ! lvdisplay | grep instance_storage;
then
    echo "Creating logical volume 'instance_storage'"
    # Find instance storage devices
    devices=$(ls /dev/xvd* | grep -v '/dev/xvda');

    # Unmount block-device if already mounted, the first block-device always is
    for d in $devices; do umount $d || true; done

    # Create volume group containing all instance storage devices
    echo $devices | xargs vgcreate instance_storage

    # Create logical volume with all storage
    lvcreate -l 100%VG -n all instance_storage
else
    echo "Logical volume 'instance_storage' already exists"
fi

echo "Formating 'instance_storage' as ext4"

# Format logical volume with ext4
if ! df -T /dev/mapper/instance_storage-all | grep 'ext4';
then
  if ! mkfs.ext4 /dev/instance_storage/all;
  then
      echo "Could not format 'instance_storage' as ext4."
      # Wait for the logical volume to become ready to be formatted.
      # Small wait is better than zombie node.
      sleep 5
      exit 1
  else
      echo "Succesfully formated 'instance_storage' as ext4."
      echo "Mounting logical volume"
      # Mount on /mnt
      mount /dev/instance_storage/all /mnt
  fi
else
  echo "Already mounted..."
fi

echo "Creating docker specific directories"
mkdir -p /mnt/var/lib/docker
mkdir -p /mnt/docker-tmp
mkdir -p /mnt/var/cache/docker-worker

export TMPDIR="/mnt/docker-tmp"

META=http://169.254.169.254/latest/meta-data
host=$(curl $META/public-hostname)
key_root=/mnt/docker_keys

# Generate the keys

if [ ! -d $key_root ];
then
  mkdir -p $key_root
  dockerkeys.sh $host $key_root
fi


DOCKER_OPTS=" -g /mnt/var/lib/docker -s aufs"
DOCKER_OPTS="$DOCKER_OPTS --tlsverify --tlscacert=$key_root/ca.pem"
DOCKER_OPTS="$DOCKER_OPTS --tlscert=$key_root/server-cert.pem"
DOCKER_OPTS="$DOCKER_OPTS --tlskey=$key_root/server-key.pem"
DOCKER_OPTS="$DOCKER_OPTS -H $host:2376"

# Random sleep wait for network to be ready?
export DOCKER_OPTS
